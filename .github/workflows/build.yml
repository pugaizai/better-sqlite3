name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - released
  workflow_dispatch: {}

env:
  ELECTRON_BUILD_CMD: npx --no-install prebuild -r electron -t 33.0.0 --include-regex 'better_sqlite3.node$'

jobs:
  build-linux:
    name: Prebuild on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt update
          sudo apt install gcc-10 g++-10 -y
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10
      - run: npm install --ignore-scripts
      - run: ${{ env.ELECTRON_BUILD_CMD }} -u ${{ secrets.GITHUB_TOKEN }}
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ matrix.artifact_name }}
      #     path: ${{ matrix.artifact_path }}

  build-linux-arm:
    name: Prebuild on Linux arm64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - run: |
          docker run --rm -v $(pwd):/tmp/project --entrypoint /bin/sh --platform linux/${{ matrix.arch }} node:18-bullseye -c "\
          cd /tmp/project && \
          npm install --ignore-scripts && \
          ${{ env.ELECTRON_BUILD_CMD }} --arch arm64 -u ${{ secrets.GITHUB_TOKEN }}"
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ matrix.artifact_name }}
      #     path: ${{ matrix.artifact_path }}
